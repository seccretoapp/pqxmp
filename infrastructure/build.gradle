buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
  }
}


plugins {
  id 'java-conventions'
  id 'application'
  id 'org.springframework.boot' version '3.3.5'
  id 'io.spring.dependency-management' version '1.1.6'
  id 'org.graalvm.buildtools.native' version '0.10.3'
}

group 'com.seccreto.infrastructure'

java {
  sourceCompatibility = JavaVersion.VERSION_21
  targetCompatibility = JavaVersion.VERSION_21
}

graalvmNative {
  binaries {
    main {
      buildArgs.add('--enable-preview')
      buildArgs.add('-H:+UnlockExperimentalVMOptions')
      buildArgs.add('--no-fallback')
      buildArgs.add('-H:+ReportExceptionStackTraces')
      buildArgs.add('-H:+PrintAnalysisCallTree')
      buildArgs.add('-H:+ReportUnsupportedElementsAtRuntime')
      buildArgs.add('-H:Optimize=2')
      buildArgs.add('-H:+RemoveSaturatedTypeFlows')
      buildArgs.add('-H:Log=registerResource:5')
      buildArgs.add('-H:+InlineBeforeAnalysis')
      buildArgs.add('-H:EnableURLProtocols=http,https')
      buildArgs.add('--gc=serial')
      buildArgs.add('-H:InitialCollectionPolicy=BySpaceAndTime')
      buildArgs.add('-R:MaxHeapSize=1024m')
      buildArgs.add('-R:MinHeapSize=256m')
      buildArgs.add('-R:MaxNewSize=128m')
      buildArgs.add('-H:IncludeResources=application.yml')
      buildArgs.add('--initialize-at-run-time=org.apache.commons.logging.LogFactory,org.apache.commons.logging.LogFactoryService')
      imageName = "pqxmp_v0.0.1-alpha"
    }
  }
}

bootJar {
  archiveFileName = "application.jar"
  destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

dependencies {
  implementation(project(":domain"))
  implementation(project(":application"))
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-redis'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

tasks.named('test') {
  useJUnitPlatform()
}

tasks.named('bootBuildImage') {
  enabled = false
}